%\VignetteIndexEntry{HIV features database and query APIs}
%\VignetteDepends{}
%\VignetteKeywords{HIV,annotation,Epitope}
%\VignettePackage{HIV.db}
\documentclass[11pt]{article}

\usepackage{times}
\usepackage{hyperref}
\usepackage{underscore}
\usepackage{Sweave}
\usepackage[authoryear,round]{natbib}


\usepackage{graphicx}

\textwidth=6.2in
\textheight=8.5in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textsf{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}



\title{HIV.db: A package that provides HIV/SIV feature database and query APIs}
\author{Mike Jiang,Raphael Gottardo}

\begin{document}
\maketitle

\begin{abstract}
\end{abstract}

\tableofcontents

\section{Introduction}
The current \Rpackage{HIV.db} package provides simple API to access the HIV(HXB2) feature database that contains HIV genes,gene products,genomic structure elements and epitopes.

<<loadPackage, echo=false,results=hide>>=
library(HIV.db)
@

\section{Load a feature database}
The \Rfunction{loadFeatures} function load the feature database for the selected genome and genomic region into memory. The returned \Robject{environment} will contain the chosen reference element and its children features (i.e all the features located in the same ranges of the genome and on the same frame). The ranges of the features are given by default in amino acid coordinates relative to the reference.

\subsection{Basic use}
<<loadFeatures-basic, eval=T, echo=TRUE,results=verbatim>>=
HIV_env<-loadFeatures()
@
By default, the function will load the features for the enveloppe of HIV. Thus, the previous call to \Rfunction{loadFeatures} is equivalent to the following:
<<loadFeatures-default,  eval=T, echo=TRUE,results=verbatim>>=
HIV_env<-loadFeatures(ref="env", genome="hxb2")
@
HXB2 is the reference genome for HIV in the package.

\subsection{Specifying a reference or a genome}
To load a different feature, use the ref and genome arguments. Here we load the features for the Gag gene in SIV:
<<loadFeatures-ref/genome,  eval=T, echo=TRUE,results=verbatim>>=
SIV_Gag<-loadFeatures(ref="Gag", genome="mac239")
@
In this package, we use mac239 as the reference genome for SIV. With hxb2 it is at the moment the only two available options.

\subsection{Changing the coordinate system}
Alternately, \Rfunction{loadFeatures} can load features in DNA coordinates relative to the full genome. 
<<loadFeaures-DNA, eval=T, echo=TRUE, results=verbatim>>=
HIV_pol<-loadFeatures(ref="pol", DNA=TRUE)
@

\subsection{Exploring the database}
After the database is loaded, users can explore the database by \Rfunction{lsCategory}, which lists the types of features availabe in the database for query.
<<lsCategory, echo=true, results=verbatim>>=
lsCategory(HIV_env)
@


\section{Query HIV feature database} 
The package provides two query methods:\Rfunction{getFeature} for HIV features and \Rfunction{getEpitope} for HIV epitopes. 

\subsection{Default query}
\Rfunction{getFeature} take the result of \Rfunction{loadFeatures} as its first and only required argument. If no other argument is passed, the function will return the list of all the features in the selected database.
<<getFeature-default, eval=T, echo=TRUE>>=
getFeature(SIV_Gag)
@


Different genes,proteins or viral regions can be searched by their names or categories:
<<getFeature-name, echo=true, results=hide>>=
getFeature(HIV_env, name=c("gp120","gp41"))
getFeature(SIV_Gag, category="protein")
@

and filter the query results further by the reading frames.
<<getFeature-frame, echo=true, results=verbatim>>=
getFeature(HIV_env, category=c("RNA"),frame=3)
@

Coordinates can also be used to specify the start and end nucleotide positions.
Note that the coordinates have to be of the same type as the one used in \Rfunction{loadFeatures} within the feature sequence. Here with SIV_Gag which has been loaded in amino-acid coordinates.
<<getFeature-coordinates-AA, echo=true, results=verbatim>>=
getFeature(SIV_Gag,start=0,end=370)
@

Now with HIV_pol in DNA coordinates.
<<getFeature-coordinates-DNA, echo=true>>=
getFeature(HIV_pol, start=2000, end=3000)
@

It will return every feature that has a part of its sequence between the start and end argument, even if the sequence is actually longer.


\subsection{Querying epitopes}
The same query can be done to the epitope database by \Rfunction{getEpitope} method.
<<getEpitope-default, echo=true, results=hide>>=
getEpitope(HIV_pol)
@


Epitope queries can also be filtered, the available filters are the ranges, the frame and the species.
<<getEpitope-filters, echo=true, results=verbatim>>=
getEpitope(HIV_env, start=50, end=70, frame=3, species="mouse")
@

Alternately, a name can be specified to retrieve a specific epitope.
<<getEpitope-filter-name, echo=true, results=verbatim>>=
getEpitope(HIV_pol, name="13E1")
@

\Rfunction{getEpitope} also takes a \Robject{HivFeature} object as input and use the HXB2 coordinates range to get the appropriate epitopes. 

<<getEpitope-feature, echo=true, results=hide>>=
gp41<-getFeature(HIV_env, name="gp41")
getEpitope(gp41, species="mouse") 
@ 
 
 
\section{Query by parent/children relations}
HivFeatures have the parent or children features based on the relative positions of their HXB2 coordinates.
We provide two methods to query the children or parent features: \Rfunction{getChildren} and \Rfunction{getParent}.

<<getChildren, echo=true, results=hide>>=
getChildren(gp41)
@

<<getParent, echo=true, results=verbatim>>=
getParent(gp41)
@

When \Robject{recursive} is set as \Robject{TRUE},all the descendants or ancestors are returned besides the immediate children or parents.

<<getParent-recur, echo=true, results=hide>>=
V1_loop<-getFeature(HIV_env, name="V1")
getParent(V1_loop,recursive=TRUE)


env<-getFeature(HIV_env, name="env")
getChildren(env, recursive=TRUE)
@

\section{Sequence of feature objects}
We also provide two methods to extract amino acid or DNA sequence: \Rfunction{getAA} and \Rfunction{getDNA}.

\subsection{From HIV features}
Sequence can be extracted from \Robject{HivFeature} objects directly 

<<getAA/getDNA-feature, echo=true>>=
getAA(gp41)
getDNA(gp41)
@

Note that both methods can take a list of \Robject{HivFeature} objects as the input and return the their sequences respectively.
<<getAA/getDNA-featureList, echo=true>>=
gp_features<-getFeature(HIV_env, name=c("gp120","gp41"))
getAA(gp_features)

head(getAA(getChildren(env)))
head(getDNA(getChildren(env)))
@

\subsection{From environments}
It is also possible to get sequences directly from the \Robject{environment} objects returned by \Rfunction{loadFeatures}.
In order to retrieve the sequence of a feature from an environment, the function require the name of the feature.
<<getAA-environment, echo=TRUE>>=
getAA(HIV_pol,name="pol")
@

For DNA sequence, the start and end position of the segment are required.
<<getDNA-environment, echo=TRUE>>=
getDNA(HIV_pol, start=50, end=249)
@

\section{conclusion}
The package allows users to query the built-in HIV features database for the important information about HIV gene and gene product as well as genomic structure elements.   

\section{Reference}

http://www.hiv.lanl.gov/content/sequence/HIV/MAP/landmark.html

\clearpage
%%%\bibliographystyle{plainnat} 
%%%\bibliography{cytoref}
\end{document}

% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is
% likely to be overwritten.
%
%\VignetteIndexEntry{HIV features database and query APIs}
%\VignetteDepends{}
%\VignetteKeywords{HIV,annotation,Epitope}
%\VignettePackage{HIV.db}
\documentclass[11pt]{article}

\usepackage{times}
\usepackage{hyperref}
\usepackage[authoryear,round]{natbib}


\usepackage{graphicx}
%\usepackage{subfigure}

\textwidth=6.2in
\textheight=8.5in
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textsf{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}



\title{HIV.db: A package that provides HIV feature database and query APIs}
\author{Mike Jiang,Raphael Gottardo}

\begin{document}
\maketitle

\begin{abstract}
\end{abstract}

\section{Introduction}
The current \Rpackage{HIV.db} package provides simple API to access the HIV(HXB2) feature database that contains HIV genes,gene products,genomic structure elements and epitopes.

<<loadPackage, echo=false,results=hide>>=
library(HIV.db)
@

\section{Load HIV feature database}
%\Rfunction{loadFeatures} function load the HIV feature database into memory.In the current version it simply returns an environment
%that stores all the data tables read from the data files. In the future it is going to the database connection that connect to the feature database in the back end. 
\Rfunction{loadFeatures} function load the feature database for the selected genome and element into memory. The returned \Robject{environment} will contain the chosen reference element and its children features. The ranges of the features are given by default in amino acid coordinates relative to the reference.

<<loadFeatures, eval=T, echo=TRUE,results=verbatim>>=
HIV_env<-loadFeatures(ref="env")
@

Alternately, \Rfunction{loadFeatures} can load features in DNA coordinates relative to the full genome. 
<<loadFeaures-DNA, eval=T, echo=TRUE, results=verbatim>>=
HIV_gag<-loadFeatures(ref="gag", DNA=TRUE)
@

After the database is loaded, users can explore the database by \Rfunction{lsCategory}, which lists the types of features availabe in the database for query.
<<lsCategory, echo=true, results=verbatim>>=
lsCategory(HIV_env)
@


\section{Query HIV feature database} 
The package provides two query methods:\Rfunction{getFeature} for HIV features and \Rfunction{getEpitope} for HIV epitopes. 
Different HIV genes,proteins or viral regions can be searched by their names or categories:

<<getFeature-name, echo=true, results=hide>>=
getFeature(HIV_env, name=c("gp120","gp41"))
getFeature(HIV_env, category="loop")
feature1<-getFeature(HIV_env, name="gp120")
@

and filter the query results further by the reading frames.

<<getFeature-frame, echo=true, results=verbatim>>=
getFeature(HIV_env, category=c("gene"),frame=3)
@

hxb2 coordinates can also be used to specify the start and end nucleotide positions.

<<getFeature-coordinate, echo=true, results=hide>>=
getFeature(HIV_gag)
getFeature(HIV_gag,start=790,end=2000)
@

The same query can be done to the epitope database by \Rfunction{getEpitope} method execpt that it takes an extra
arugment \Robject{species}.

<<getEpitope, echo=true, results=verbatim>>=
getEpitope(HIV_gag,start=4240,end=5096,species="mouse",name="4D6",frame=3)
@

\Rfunction{getEpitope} also takes a \Robject{HivFeature} object as input and use the HXB2 coordinates range to get the appropriate epitopes. 

<<getEpitope-feature, echo=true, results=verbatim>>=
feature2<-getFeature(HIV_gag, name="p7")
getEpitope(feature2, species="mouse") 
@ 
 
 
\section{Query by parent/children relations}
HivFeatures have the parent or children features based on the relative positions of their HXB2 coordinates.
We provide two methods to query the children or parent features: \Rfunction{getChildren} and \Rfunction{getParent}.

<<getChildren, echo=true, results=hide>>=
feature3<-getFeature(HIV_gag, name="gag")
getChildren(feature3)
@

<<getParent, echo=true, results=verbatim>>=
feature4<-getFeature(HIV_gag, name="p24")
getParent(feature4)

feature5<-getFeature(HIV_env, name="V1")
getParent(feature5)
@

When \Robject{recursive} is set as \Robject{TRUE},all the descendants or ancestors are returned besides the immediate children or parents.

<<getParent-recur, echo=true, results=verbatim>>=
getParent(feature5,recursive=TRUE)


getChildren(feature1,recursive=TRUE)
@

\section{sequence of HIV feature}
We also provide two methods to extract amino acid or DNA sequence of the HIV features.
Sequence can be extracted from \Robject{HivFeature} objects directly 

<<getAA-feature, echo=true, results=hide>>=
getAA(feature4)
getDNA(feature4)
@

or by providing database environment and hxb2 coornidates range to \Rfunction{getAA} method:

<<getAA-other, echo=true, results=hide>>=
#%getAA(HIV_gag,name="pol")

getDNA(HIV_gag,start=1921,end=2085)

getDNA(feature4,start=1500,end=1615)
@

Note that both methods can take a list of \Robject{HivFeature} objects as the input and return the their sequences respectively.

<<getAA-list, echo=true, results=hide>>=
getAA(getChildren(feature3))
getDNA(getChildren(feature3))
@ 

\section{conclusion}
THe package allows users to query the built-in HIV features database for the important information about HIV gene and gene product as well as genomic structure elements.   

\section{Reference}

http://www.hiv.lanl.gov/content/sequence/HIV/MAP/landmark.html

\clearpage
%\bibliographystyle{plainnat} 
%\bibliography{cytoref}
\end{document}
